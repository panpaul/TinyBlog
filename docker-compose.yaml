services:
  server:
    build:
      context: .
    restart: unless-stopped
    ports:
      - '8080:8080'
    volumes:
      - server_data:/app/resource/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SERVER_DB_PASSWORD: '0f359740bd1cda99'
      SERVER_DB_NAME: 'tinyblog'
    networks:
      - server
      - database

  postgres:
    image: postgres:alpine
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: '0f359740bd1cda99'
      POSTGRES_DB: 'tinyblog'
      TZ: 'Asia/Shanghai'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - database

  redis:
    image: redis:alpine
    restart: unless-stopped
    #    ports:
    #      - '6379:6379' # debug only
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data
    networks:
      - database

  adminer:
    image: adminer
    restart: always
    ports:
      - '8081:8080'
    depends_on:
      - postgres
    networks:
      - database

networks:
  server:
  database:

volumes:
  server_data:
  pgdata:
  redis_data:
